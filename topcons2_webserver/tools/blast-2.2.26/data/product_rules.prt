Suspect-rule-set ::= {
  {
    find
      contains-plural NULL ,
    rule-type putative-typo } ,
  {
    find
      n-or-more-brackets-or-parentheses 2 ,
    rule-type description } ,
  {
    find
      three-numbers NULL ,
    rule-type database } ,
  {
    find
      all-caps NULL ,
    rule-type inappropriate-symbol } ,
  {
    find
      unbalanced-paren NULL ,
    rule-type inappropriate-symbol } ,
  {
    find
      too-long 100 ,
    feat-constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "bifunctional" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "multifunctional" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "#" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "%" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "&apos" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type database } ,
  {
    find
      string-constraint {
        match-text "," ,
        match-location ends ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "," ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "-" ,
        match-location ends ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "-" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "." ,
        match-location ends ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "." ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text ". " ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "./" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "/" ,
        match-location ends ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text ":" ,
        match-location ends ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text ";" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "=" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "?" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "a " ,
        match-location starts ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "accessroy" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "accessory" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "aceytltranferase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "acetyltransferase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "active site" ,
        match-location ends ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type use-protein ,
    description "ends with 'active site' (If this is only the active site,
 remove this feature. If this is a translated protein, provide a product name.
 Consider adding 'protein' to the end of the name.)" } ,
  {
    find
      string-constraint {
        match-text "adenine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "adenylattransferase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "adenylate transferase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "adenylytransferase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "adenylyltransferase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Alanine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "alternate protein name" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "alternate protein name" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    feat-constraint {
      string {
        match-text "alternative protein name" ,
        match-location equals ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "aluminium" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type british ,
    replace {
      replace-func
        simple-replace {
          replace "aluminum" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "amino acid" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "aminotransferasee" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "aminotransferase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "analog" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    except
      string-constraint {
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps TRUE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type evolutionary-relationship } ,
  {
    find
      string-constraint {
        match-text "aparaginase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "asparaginase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Arabidopsis" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "arginin " ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "arginine " ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Arginine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "argininte" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "arginine" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Asparagine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "asparate" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "aspartate" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Aspartic acid" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "Aspergillus" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "aureus" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "authentic point mutation" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      string-constraint {
        match-text "B.subtilis" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "Bacillus" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "Bacteroides" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "barrel" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "bifunctionnal" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "bifunctional" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "bigenesis" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "biogenesis" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "binding" ,
        match-location ends ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type use-protein ,
    description "ends with 'binding' (If this is only the binding site, remove
 this feature. If this is a translated protein, provide a product name.
 Consider adding 'protein' to the end of the name.)" } ,
  {
    find
      string-constraint {
        match-text "bioin" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "biotin" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "biosyntesis" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "biosynthesis" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "biosythesis" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "biosynthesis" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "bnding" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "binding" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "bos taurus" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      has-term "C term" ,
    feat-constraint {
      string {
        match-text "C term" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      has-term "C-term" ,
    feat-constraint {
      string {
        match-text "C-term" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      string-constraint {
        match-text "Campylobacter" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "Candida" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "candidate" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    feat-constraint {
      string {
        match-text "candidate protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "carbon" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "carboxilic" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "carboxylic" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "CBS domain pair" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type use-protein } ,
  {
    find
      string-constraint {
        match-text "CDS" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "cell divisionFtsK/SpoIIIE" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "cell division FtsK/SpoIIIE" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "cerevisiae" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "characteris" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "characteriz" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "charateriz" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "characteriz" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "CHC2 zinc finger" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "CHC2 zinc finger protein" ,
          whole-string FALSE ,
          weasel-to-putative TRUE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "chelatin" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "chelating" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Chlamydial" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "Chlamydomonas" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "Chloroplast" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    feat-constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Eukaryota" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } ,
    rule-type no-organelle-for-prokaryote } ,
  {
    find
      string-constraint {
        match-text "citrate" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "coantaining" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "containing" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "coenzye" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "coenzyme" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "COG" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    except
      string-constraint {
        match-text "COG" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type database } ,
  {
    find
      string-constraint {
        match-text "COG" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "coli" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "complete" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "compnent" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "component" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "componenet" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "component" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "componnent" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "component" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "conser" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "conserv" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "conserved" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Conservd" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "conserved" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "conserve" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "conserved" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "conserved domain protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "conserved hypothetical" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "conserved hypothetical protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "conserved predicted domain protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "conserved protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Conserved subname: full" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Conserved with" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "consevered" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "conserved" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "contain" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "containing" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "containg" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "containing" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "containing" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "contig" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "converved" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "conserved" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "coserved" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "conserved" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "cotaining" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "containing" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Critica" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "Crystal Structure" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "Cysteine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "cytosine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "degration" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "degradation" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "deletion" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      string-constraint {
        match-text "dependant" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "dependent" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "deydrogenase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "dehydrogenase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "diacyglycerol" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "diacylglycerol" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "dimerisation" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type british ,
    replace {
      replace-func
        simple-replace {
          replace "dimerization" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "dimerising" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type british ,
    replace {
      replace-func
        simple-replace {
          replace "dimerizing" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "dioxyenase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "dioxygenase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "disulphide" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "disulfide" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "divison" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "division" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "DNA" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "DNA for" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "domain" ,
        match-location ends ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type use-protein ,
    description "ends with 'domain' (If this is only similar to a domain,
 remove this feature. If this is a translated protein, provide a product name.
 Consider adding 'protein' to the end of the name.)" } ,
  {
    find
      string-constraint {
        match-text "domain" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "domain 1" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "domain domain" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "domain" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "domain family" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "domain of unknown function" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "domain of unknown function protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "domain of unknown function" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    feat-constraint {
      string {
        match-text "domain of unknown function" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
      string {
        match-text "domain of unknown function family protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
      string {
        match-text "domain of unknown function protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "protein of unknown function" ,
          whole-string FALSE ,
          weasel-to-putative TRUE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "domain of unknown function family protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "domain protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "domain protein domain protein" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "domain protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "domain-containing protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "domainl" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "domain" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "domian" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "domain" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "doubtful" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      string-constraint {
        match-text "doubtful CDS found within S. typhi pathogenicity island" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Drosophila" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "DUF" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    except
      string-constraint {
        match-text "DUF" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type database } ,
  {
    find
      string-constraint {
        match-text "DUF" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "dyhydrogenase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "dihydrogenase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "dyhydrogenase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "dehydrogenase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "E.coli" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "ECOLI" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "enentioselective" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "enantioselective" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "enterica" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "Escherichia" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "EST" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "EST" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    except
      string-constraint {
        match-text "EST" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type database } ,
  {
    find
      string-constraint {
        match-text "exporte" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "exported" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "expressed protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "facotr" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "factor" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "factor" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "fagella" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "flagella" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "familie" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "family" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "family family" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "family" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "family protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "finger" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "flageller" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "flagellar" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "FOG" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type database } ,
  {
    find
      string-constraint {
        match-text "fold" ,
        match-location ends ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    feat-constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "folD" ,
          match-location ends ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "FolD" ,
          match-location ends ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } } ,
    rule-type use-protein ,
    description "ends with 'fold' (If this is only similar to a protein fold,
 remove this feature. If this is a translated protein, provide a product name.
 Consider adding 'protein' to the end of the name.)" } ,
  {
    find
      string-constraint {
        match-text "Fragment" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      string-constraint {
        match-text "frame shift" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      string-constraint {
        match-text "Frameshift" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      string-constraint {
        match-text "from" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "function" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "gene" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type gene } ,
  {
    find
      string-constraint {
        match-text "genes" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type gene } ,
  {
    find
      string-constraint {
        match-text "genome" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "ggdef" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "gIycerol" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "glycerol" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "glcosyl" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "glycosyl" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Glimmer" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "glucosainyl" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "glucosaminyl" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Glutamic acid" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "Glutamine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "glutaminne" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "glutamine" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "glycin" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "glycine" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Glycine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "glycosy" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "glucosyl" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "golgi" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    feat-constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Eukaryota" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } ,
    rule-type no-organelle-for-prokaryote } ,
  {
    find
      string-constraint {
        match-text "guanine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "haem" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type british ,
    replace {
      replace-func
        haem-replace "heme" ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "haemagglutination" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type british ,
    replace {
      replace-func
        simple-replace {
          replace "hemagglutination" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "halophilus" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "heam" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        haem-replace "heme" ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Helicobacter" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "helium" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "helix" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "helix-turn-helix" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "helix-turn-helix protein" ,
          whole-string FALSE ,
          weasel-to-putative TRUE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hemaggltinin" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hemagglutinin" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hemelysin" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hemolysin" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hemoglobine" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hemoglobin" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hexapaptide" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hexapeptide" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hexpeptide" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hexapeptide" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "highly conserved" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "histadine" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "histidine" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "histide" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "histidine" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Histidine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "homeserine" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "homoserine" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "homo" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "homo sapiens" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "homocystein" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "homocysteine" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Homolog" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type evolutionary-relationship } ,
  {
    find
      string-constraint {
        match-text "hpothetical" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "human" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "hydrogen" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "hydrolases of the alpha/beta superfamily" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hydrolase of the alpha/beta superfamily" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hyopothetical" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hyopthetical" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hyothetical" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hyp domain protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hyphotetical" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hyphotheical" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypo" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypohetical" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypot" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypotehtical" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypotethical" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypotetical" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypoth" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypothe" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypotheical" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypotheitcal" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypothet" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypothetcial" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypothethical" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypotheti" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypothetic" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypothetica" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypothetical" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    feat-constraint {
      string {
        match-text "hypothetical protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
      string {
        match-text "hypothetical domain protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
      string {
        match-text "hypothetical ORF" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
      string {
        match-text "hypothetical" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
      string {
        match-text "Hypothetical conserved protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
      string {
        match-text "hypothetical protein" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
      string {
        match-text "UPF" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            word "UPF" ,
            synonyms {
              "UCP" ,
              "DUF" ,
              "PUF" ,
              "CHP" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypothetical" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypothteical" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypothtical" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hypthetical" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "hyptothetical" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "identity" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "inactivated derivative" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "Includes:" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "incomplete ORF" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    except
      string-constraint {
        match-text "incomplete ORF domain protein" ,
        match-location equals ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      string-constraint {
        match-text "incomplete ORF domain protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "inductible" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "inducible" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "initation" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "initiation" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "insertion sequence" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "interrupt" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      string-constraint {
        match-text "Intiation" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "initiation" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "invertion" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "inversion" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "involved" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "iron" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      prefix-and-numbers "IS" ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "Isoleucine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "isomaerase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "isomerase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "isomerse" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "isomerase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Jejuni" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "K potassium" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "potassium" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "K+ potassium" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "potassium" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Leishmania" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "Leucine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "like" ,
        match-location ends ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type use-protein } ,
  {
    find
      string-constraint {
        match-text "Low Quality Protein" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      string-constraint {
        match-text "Lysine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "majour" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type british ,
    replace {
      replace-func
        simple-replace {
          replace "major" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "mambrane" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "membrane" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Marinococcus" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "meausure" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "measure" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "membrane" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "membranne" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "membrane" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Methionine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "methlytransferase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "methyltransferase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "metylase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "methylase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Mitochondrial" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    feat-constraint {
      source {
        field1
          textqual lineage ,
        constraint {
          match-text "Eukaryota" ,
          match-location contains ,
          case-sensitive TRUE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } ,
        type-constraint any } } ,
    rule-type no-organelle-for-prokaryote } ,
  {
    find
      string-constraint {
        match-text "mobilisation" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type british ,
    replace {
      replace-func
        simple-replace {
          replace "mobilization" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "molibdenum" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "molybdenum" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "molybopterin" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "molybdopterin" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "molydopterin" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "molybdopterin" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "monooxigenase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "monooxygenase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "monoxyde" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "monoxide" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "monoxygenase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "monooxygenase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "motif" ,
        match-location ends ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type use-protein ,
    description "ends with 'motif' (If this is only similar to a protein
 motif, remove this feature. If this is a translated protein, provide a
 product name. Consider adding 'protein' to the end of the name.)" } ,
  {
    find
      string-constraint {
        match-text "mouse" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "mRNA" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "mulitdrug" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "multidrug" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Mus musculus" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "mutatrotase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "mutarotase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Mycobacterium" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "mycoplasma" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "mypothetical" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      has-term "N term" ,
    feat-constraint {
      string {
        match-text "N term" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      has-term "N-term" ,
    feat-constraint {
      string {
        match-text "N-term" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      string-constraint {
        match-text "NAD" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "narrowly conserved" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "ncharacterized" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "uncharacterized" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "ncRNA" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "ndoribonuclease" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "endoribonuclease" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Neurospora" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "nickle" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "nickel" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "niger" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "nitrogen" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "Nmr solution" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "No definition line found" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "No definition line found" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "novel" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    except
      string-constraint {
        match-text "novel protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "novel" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    feat-constraint {
      string {
        match-text "novel protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "ntegral " ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "integral " ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "nucelar" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "nuclear" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "nucleotydyl" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "nucleotidyl" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "nulcear" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "nuclear" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "o252" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "o252 protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "obalt" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "cobalt" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "odule" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "module" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "open reading frame" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type might-be-nonfunctional ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "open reading frame" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    feat-constraint {
      string {
        match-text "open reading frame" ,
        match-location equals ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      string-constraint {
        match-text "or related" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "ORF" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "orf, hyp" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "orf, hypothetical" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "orphan protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "orphan protein" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    feat-constraint {
      string {
        match-text "orphan protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      string-constraint {
        match-text "ortholog" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type evolutionary-relationship } ,
  {
    find
      string-constraint {
        match-text "outers" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "outer" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "oxidoreducatse" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "oxidoreductase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "oxidoreductasee" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "oxidoreductase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "oxidoreductasse" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "oxidoreductase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "oxidoredutase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "oxidoreductase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "oxidoreduxtase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "oxidoreductase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "oxydase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "oxidase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "oxygen" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "p-loop" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "p-loop protein" ,
          whole-string FALSE ,
          weasel-to-putative TRUE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "paralog" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type evolutionary-relationship } ,
  {
    find
      string-constraint {
        match-text "partial" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      string-constraint {
        match-text "PASTA" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "PASTA protein" ,
          whole-string FALSE ,
          weasel-to-putative TRUE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "peptide" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "peptidodoglycan" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "peptidoglycan" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "periplamic" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "periplasmic" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "periplasmc" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "periplasmic" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "periplsmic" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "periplasmic" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Pestis" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "petidase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "peptidase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "phage" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "Phenylalanine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "phophate" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "phosphate" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "phopho" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "phospho" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "phophoserine" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "phosphoserine" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "phoshate" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "phosphate" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "phosphatidyltransferse" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "phosphatidyltransferase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "phosphatransferase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "phosphotransferase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "phosphopantethiene" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "phosphopantetheine" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "phosphotase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "phosphatase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "plasmid" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "Plasmodium" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "pombe" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "Portein" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "portein" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "posible" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "possible" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "possible" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    feat-constraint {
      string {
        match-text "possible protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "potential" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    feat-constraint {
      string {
        match-text "potential protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "precursor" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "predicted" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    feat-constraint {
      string {
        match-text "predicted protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "predicted" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "presursor" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "precursor" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "probable" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    feat-constraint {
      string {
        match-text "probable protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "probable" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "probable protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "probable putative" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "proein" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Proline" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "prortein" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "protei" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    feat-constraint {
      string {
        match-text "hypothetical protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
      string {
        match-text "uncharacterized protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "protein associated to" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "protein conserved in bacteria" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "protein containing" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "protein of unknown function" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "protein protein" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "protein, conserved" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "protein-containing" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "proteine" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "proteinn" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "protien" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "protrein" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "protwin" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "prptein" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "pseudo" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "pseudo" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      string-constraint {
        match-text "pseudogene" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      string-constraint {
        match-text "pseudomonas" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "ptotein" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "PTS system" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "PTS system protein" ,
          whole-string FALSE ,
          weasel-to-putative TRUE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "puatative" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "puative" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "purine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "putaitive" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "putaitve" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "putaive" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "putataive" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "putatitve" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "putative" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "putative potential" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "putative predicted" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "putative probable" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "putative putative" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "putative uncharacterized" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "putative, putative" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "putatuve" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "putatve" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "putatvie" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "putayive" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "puter" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "outer" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "putitive" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "pylori" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "qlcohol" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "alcohol" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "rat" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "recognised" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "recognized" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "reductasee" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "reductase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "regulatot" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "regulator" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "related" ,
        match-location ends ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type use-protein } ,
  {
    find
      string-constraint {
        match-text "Related" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "repeat" ,
        match-location ends ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type use-protein ,
    description "ends with 'repeat' (If this is only similar to a repeat,
 remove this feature. If this is a translated protein, provide a product name.
 Consider adding 'protein' to the end of the name.)" } ,
  {
    find
      string-constraint {
        match-text "repeat" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "reponse" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "response" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "resistence" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "resistance" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Rhodobacter" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "ribosimal" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "ribosomal" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "ribosoml" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "ribosomal" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "rickettsia" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "RNA" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "RNA for" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "rRNA" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "rsponse" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "response" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Salmonella" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "sapiens" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "secreted" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "Serine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "serinr" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "serine" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "serovar" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "shotgun" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "sigm" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type putative-typo } ,
  {
    find
      string-constraint {
        match-text "signal" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "signal peptide" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "signal peptide protein" ,
          whole-string FALSE ,
          weasel-to-putative TRUE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "signalling" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "signaling" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "similar" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "simmilar" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "similar" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "sodium" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "solution Nmr" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "solution structure" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "specfic" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "specific" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "sphaeroides" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "spscific" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "specific" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "sreptomyces" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "stabilisation" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "stabilization" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Staphlococcal" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "Staphlococcus" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "staphylococcal" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "Staphylococcus" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "start codon" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      string-constraint {
        match-text "streptococcal" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "Streptococcus" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "streptomyces" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "structure of" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "subnit" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "subunit" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "subsp" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "Subtilis" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "subunit" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "suger" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "sugar" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "sulphate" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type british ,
    replace {
      replace-func
        simple-replace {
          replace "sulfate" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "sulphide" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type british ,
    replace {
      replace-func
        simple-replace {
          replace "sulfide" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "sulpho" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "sulfo" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "sulphur" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "sulfur" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "SWIM zinc finger" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "SWIM zinc finger protein" ,
          whole-string FALSE ,
          weasel-to-putative TRUE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "systhesis" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "synthesis" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "sythase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "synthase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "tetracenpmycin" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "tetracenomycin" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "thaliana" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "thiamin/thiamin" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "thiamin/thiamine" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "thiamineS" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "thiamine S" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "thioderoxin" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "thioredoxin" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "thiredoxin" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "thioredoxin" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "threonin" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "threonine" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Threonine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "thymine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "trancsriptional" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transcription" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "tranferase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transferase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "tranporter" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transporter" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "transcirbed" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transcribed" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "transcrIpt" ,
        match-location contains ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transcript" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "transcriptonal" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transcriptional" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "transcritional" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transcriptional" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "transebrane" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transmembrane" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "transemembrane" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transmembrane" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Transemembrane" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transmembrane" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "transerfase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transferase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "transferasee" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transferase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "transglycolase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transglycosylase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "transmebrane" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transmembrane" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Transmebrane" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transmembrane" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "transorter" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transporter" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "transpoase" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transposase" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "transport-associated" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transport-associated protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "transportor" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transporter" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "transposase of" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transposase" ,
          whole-string FALSE ,
          weasel-to-putative TRUE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "transposon" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "transproter" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transporter" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "transulfuration" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transsulfuration" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "tRNA" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "trnasporter" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transporter" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "truncat" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      string-constraint {
        match-text "Tryptophan" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "ttg start" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type description ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "ttg start" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    feat-constraint {
      string {
        match-text "ttg start codon" ,
        match-location equals ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "Tuberculosis" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "tumour" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type british ,
    replace {
      replace-func
        simple-replace {
          replace "tumor" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Typhimurium" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "typr" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "type" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Tyrosine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "uncharacterized" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "uncharacterized" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    feat-constraint {
      string {
        match-text "uncharacterized protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
      string {
        match-text "uncharacterized protein conserved in bacteria" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
      string {
        match-text "uncharacterized conserved protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
      string {
        match-text "uncharacterized" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
      string {
        match-text "uncharacterized domain 1" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
      string {
        match-text "uncharacterized protein" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
      string {
        match-text "UPF" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            word "UPF" ,
            synonyms {
              "UCP" ,
              "DUF" ,
              "PUF" ,
              "CHP" } ,
            case-sensitive FALSE ,
            whole-word FALSE } } ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "unclassified" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "undecapaprenyl" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "undecaprenyl" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "unique" ,
        match-location starts ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    feat-constraint {
      string {
        match-text "unique protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "putative" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "unkn" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "unknown" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "unknown" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    feat-constraint {
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "protein of unknown function" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      field {
        field
          feature-field {
            type cds ,
            field
              legal-qual product } ,
        string-constraint {
          match-text "domain of unknown function" ,
          match-location contains ,
          case-sensitive FALSE ,
          ignore-space FALSE ,
          ignore-punct FALSE ,
          whole-word FALSE ,
          not-present TRUE ,
          is-all-caps FALSE ,
          is-all-lower FALSE ,
          is-all-punct FALSE ,
          ignore-weasel FALSE } } ,
      string {
        match-text "unknown" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
      string {
        match-text "unknown protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } } ,
    rule-type might-be-nonfunctional } ,
  {
    find
      string-constraint {
        match-text "unknown protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "unkown" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "unknown" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "unnamed" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "unnamed" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    feat-constraint {
      string {
        match-text "unnamed" ,
        match-location equals ,
        case-sensitive TRUE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present TRUE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "UPF" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    except
      string-constraint {
        match-text "UPF" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type database } ,
  {
    find
      string-constraint {
        match-text "UPF" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "uracil" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "utilisation" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type british ,
    replace {
      replace-func
        simple-replace {
          replace "utilization" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "utilising" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type british ,
    replace {
      replace-func
        simple-replace {
          replace "utilizing" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "Valine" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "weakly conserved" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "widely conserved" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type description } ,
  {
    find
      string-constraint {
        match-text "xenopus" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "xray structure" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "yeast" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "Yersinia" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "ypothetical" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "ytochrome" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "cytochrome" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "yypothetical" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "zinc" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        ignore-words {
          {
            synonyms {
              "probable" ,
              "putative" ,
              "hypothetical" } ,
            case-sensitive FALSE ,
            whole-word TRUE } } ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note TRUE } } ,
  {
    find
      string-constraint {
        match-text "zinc finger" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "zinc finger protein" ,
          whole-string FALSE ,
          weasel-to-putative TRUE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "\\-PA" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "_" ,
        match-location ends ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      underscore NULL ,
    rule-type database } ,
  {
    find
      string-constraint {
        match-text "|" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type inappropriate-symbol } ,
  {
    find
      string-constraint {
        match-text "hypotheticalprotein" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "domain of unknown function family protein" ,
        match-location equals ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel TRUE } ,
    rule-type hypothetical ,
    replace {
      replace-func
        simple-replace {
          replace "hypothetical protein" ,
          whole-string TRUE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text " Anopheles" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "gambiae" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "Bombyx" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "Helicoverpa" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "Spodoptera" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type remove-organism-name } ,
  {
    find
      string-constraint {
        match-text "reguratory" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "regulatory" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "fibre" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type british ,
    replace {
      replace-func
        simple-replace {
          replace "fiber" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "ranscriptional" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word TRUE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transcriptional" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "membraneprotein" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "membrane protein" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "membranetransport" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "membrane transport" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "membtrane" ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "membrane" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } ,
  {
    find
      string-constraint {
        match-text "transcriptionnal " ,
        match-location contains ,
        case-sensitive FALSE ,
        ignore-space FALSE ,
        ignore-punct FALSE ,
        whole-word FALSE ,
        not-present FALSE ,
        is-all-caps FALSE ,
        is-all-lower FALSE ,
        is-all-punct FALSE ,
        ignore-weasel FALSE } ,
    rule-type typo ,
    replace {
      replace-func
        simple-replace {
          replace "transcriptional" ,
          whole-string FALSE ,
          weasel-to-putative FALSE } ,
      move-to-note FALSE } } }
